name: unit-tests
on: [pull_request]
jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Bootstrap poetry
      shell: bash
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Configure poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s python -m poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      shell: bash
      run: |
        poetry env use ${{ matrix.python-version }}
        poetry install

    - name: Display Python version
      run: poetry run python -c "import sys; print(sys.version)"

    - name: Generate Report
      run: |
        poetry run pytest --cov=netspy --cov-report=xml tests

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
