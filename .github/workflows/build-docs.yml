name: Build docs
on:
  release:
    types: [published]
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap poetry
        shell: bash
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry==1.4.0

      - name: Configure poetry
        shell: bash
        run: |
          python -m poetry config virtualenvs.in-project true
          python -m poetry config virtualenvs.create true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m poetry env use ${{ matrix.python-version }}
          python -m poetry install

      - name: Display Python version
        run: poetry run python -c "import sys; print(sys.version)"

      - name: Deploy docs
        run: poetry run mkdocs gh-deploy --force --config-file docs/mkdocs.yml
