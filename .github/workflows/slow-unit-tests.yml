---
name: slow-unit-tests
on:
  # Only runs on PRs to main to cut down on minutes used...
  pull_request:
    branches:
      - main
  # ...or when a PR is merged into main.
  # We want it to run on main because then the
  # cache can be used in other branches.
  # https://github.community/t/actions-cache-cache-not-being-hit-despite-of-being-present/17956/3
  push:
    branches:
      - main
jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
      fail-fast: false
    env:
      # Set the location of netts dependencies
      NETTS_DIR: '.dependencies'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Bootstrap poetry
      shell: bash
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==1.4.0

    - name: Configure poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project true
        python -m poetry config virtualenvs.create true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install dependencies
      shell: bash
      run: |
        python -m poetry env use ${{ matrix.python-version }}
        python -m poetry install

    - name: Display Python version
      run: poetry run python -c "import sys; print(sys.version)"

    # Cache netts dependencies except openie (cache too big)
    - name: Set up netts cache
      uses: actions/cache@v2
      id: netts-dependencies
      with:
        # Don't cache the openie language model as it alone is > 5GB
        path: |
          .dependencies/nltk_data/*
          .dependencies/stanza_corenlp/*
          .dependencies/openie/openie-assembly-5.0-SNAPSHOT.jar
        key: netts-dependencies

    - name: Install netts dependencies
      shell: bash
      run: |
        python -m poetry run netts install

    - name: Generate Report
      run: |
        python -m poetry run pytest --cov=netts --cov-report=xml tests -m "not slow and not without_cache"

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
